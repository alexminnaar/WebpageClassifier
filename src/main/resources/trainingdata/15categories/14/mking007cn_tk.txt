mking007 – mking007's blog 跳至正文 mking007 mking007's blog 菜单和挂件 搜索： 2017年八月 一 二 三 四 五 六 日 « 12月       1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31   功能 登录 文章RSS 评论RSS WordPress.org 近期文章 在终端下间接使用Socks5代理的几种方法(privoxy,tsocks,proxychains) ssh 代理详细解释 海淘转运 非常详细又非常基本的ASS代码 用wget建立网站镜像 文章归档 2016年十二月 2016年十一月 2016年十月 2016年九月 2016年八月 2016年七月 2016年六月 2016年五月 2016年四月 2016年三月 2016年二月 2016年一月 2015年十二月 2015年十一月 2015年十月 2015年九月 2015年二月 2015年一月 2014年十二月 2014年十月 2014年九月 2014年七月 2014年六月 2014年五月 2014年四月 2014年二月 2014年一月 2013年十二月 2013年十一月 2013年十月 2013年九月 2013年八月 2013年七月 2013年六月 2013年五月 2013年四月 2013年三月 2013年二月 2013年一月 分类目录 android antivirus bridge CAD google linux media open-wrt secure Suricata woedpress 动画片资源 历史 地图 建站 斗铠 旅游 未分类 硬件 网络 翻墙 车 搜索： 在终端下间接使用Socks5代理的几种方法(privoxy,tsocks,proxychains) Use socks5 proxy for pip install Issue pip install doesn’t provide the native socks5 proxy support. Solution Use a tool named proxychains which chains the connection through proxy. On Fedora, install via sudo dnf install proxy chains. To change the default socks5 proxy, modify /etc/proxychains.conf, under [ProxyList] add one line: socks5 127.0.0.1 1080 How to use: proxychains pip install requests Done! Happy pip with socks5 proxy.     不知道为什么今天PPA又只能使用代理访问了。好像终端不支持Socks5代理 没办法。咱转换吧。 （以下方法合用几乎可以使linux下面大多数软件实现代理通信，即使软件本身不支持） 1.使用tsocks转接 Shell 1 2 sudo apt–get install privoxy vim /etc/tsocks.conf 简单介绍下配置方法 Shell 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 local = 192.168.0.0/255.255.255.0 local = 10.0.0.0/255.0.0.0 local = 127.0.0.1/255.255.255.255 #本地子网不使用代理 #这里的本地子网不一定是局域网，凡是本机可以直接连接的IP都属于local的范围。 #放大了讲，国内的IP基本上对tsocks来说都是一个“本地子网”（伟大的局域网） path {         reaches = 150.0.0.0/255.255.0.0         reaches = 150.1.0.0:80/255.255.0.0         server = 10.1.7.25         server_type = 5         default_user = delius         default_pass = hello } #例外网站。这里列出来的网站不通过默认服务器走，而是通过特定的服务器走。server_type规定了这是一个socks5代理服务器 # 默认服务器（不是本地子网的，也不是例外网站） server = 192.168.0.1 # Server type defaults to 4 so we need to specify it as 5 for this one server_type = 5 # The port defaults to 1080 but I’ve stated it here for clarity #默认端口1080 server_port = 1080 我们可以这样测试一下 Shell 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 tsocks wget https://www.dropbox.com –v –O /dev/null —2011–01–09 21:28:52—  https://www.dropbox.com/ 正在解析主机 www.dropbox.com... 208.43.202.50 Connecting to www.dropbox.com|208.43.202.50|:443… 已连接。 已发出 HTTP 请求，正在等待回应... 200 OK 长度：未指定 [text/html] Saving to: `/dev/null‘ #略………… #直接wget，就会撞墙 wget https://www.dropbox.com –v –O /dev/null —2011–01–09 21:29:15—  https://www.dropbox.com/ 正在解析主机 www.dropbox.com... 208.43.202.50 Connecting to www.dropbox.com|208.43.202.50|:443… #查看代理IP tsocks wget http://202.12.29.205/templates/yourip.html –o /dev/null –O /tmp/yourip.html && cat /tmp/yourip.html |grep ‘\[‘ #略…… 效果那是立竿见影啊！遗憾的是似乎已经停止开发了，而且ssh和ftp不工作，其官方网站你推荐了另外一个替代品,Dante，这个配置有点复杂，后面我会给出一个更好的替代品。 2.使用privoxy转换Socks5->HTTP代理 Shell 1 2 sudo apt–get install privoxy vim /etc/privoxy/config 在最后一行加入 Shell 1 2 3 forward–socks4 / 127.0.0.1:1080 .    # socks v4 forward–socks4a / 127.0.0.1:1080 .    # socks v4, use remote dns forward–socks5 / 127.0.0.1:1080 .    # socks v5 注意后面有个点 1080是本机的Socks代理端口 然后用service把privoxy给restart一下即可 默认监听的端口是本机的8118 如果要监听所有端口或者更换所有端口 把 Shell 1 listen–address  127.0.0.1:8118 改为 Shell 1 listen–address  :8118 即可 这个虽然有点杀鸡用牛刀的意思，而且privoxy的鉴权不好实现。但是还是个好方法。 3.使用proxychains完美替代 Shell 1 2 apt–get install proxychains vim /etc/proxychains.conf 配置非常简单，软件有3种代理模式 # Dynamic – Each connection will be done via chained proxies # all proxies chained in the order as they appear in the list # at least one proxy must be online to play in chain # (dead proxies are skipped) # otherwise EINTR is returned to the app 动态模式 按照列表内指定的代理的顺序执行代理操作，遇到不可用代理时会自动切换 至少需要一个可用代理 # Strict – Each connection will be done via chained proxies # all proxies chained in the order as they appear in the list # all proxies must be online to play in chain # otherwise EINTR is returned to the app 严格模式 代理顺序严格按照列表顺序来，列表内代理必须全部处于可用状态 # Random – Each connection will be done via random proxy # (or proxy chain, see chain_len) from the list # this option is good for scans 随机模式 随机选择代理代理列表里面的代理，代理个数由chain_len决定（如果你的代理个数少于chain_len个数，会报错） [ProxyList]配置节指定了代理列表。支持socks4/5 http等 还支持带认证的代理 比如 type host port [user pass] socks5 192.168.67.78 1080 lamer secret 贴一下我的配置文件 Shell 1 2 3 4 5 6 7 8 #cat /etc/proxychains.conf |grep -v “#” |sed /^$/d dynamic_chain chain_len = 1 tcp_read_time_out 15000 tcp_connect_time_out 10000 [ProxyList] socks5  127.0.0.1   1080 socks4  127.0.0.1   1080 使用方法和tsocks是一样的，比如 Shell 1 proxychains wget https://www.dropbox.com –v –O /dev/null 遗憾的是，以上几款都不支持基于用户名和密码的鉴权! 本机用用可以，想要小圈子内共享是个大问题！ 更加专业工具 如果你有一VPN线路出国，想要和朋友共享这条加密隧道，但是又不方便把VPN共享，或者不想使用chnroutes这样和autoproxy相比不精确的方法，怎么办呢，下次我撰文写如何把VPN隧道转换成代理。请关注。 Author Info : From:在终端下间接使用Socks5代理的几种方法(privoxy,tsocks,proxychains) URL:http://blog.ihipop.info/2011/01/1988.html Please Reserve This Link,Thanks! 发布于 2016年12月18日分类 linux、网络、翻墙标签 proxy、socks ssh 代理详细解释 原文:http://www.cnblogs.com/wangkangluo1/archive/2011/06/29/2093727.html ssh -qTfnN -D 7070 [email protected] ssh -CfNg -R 1521:127.0.0.1:80 [email protected] 参考地址： http://hi.baidu.com/edeed/item/e393cf34a76eb8f3e7bb7ab8 http://hi.baidu.com/step_1/blog/item/271f831bfbc198f1ae5133b7.html http://hi.baidu.com/deyu260/blog/item/3be433093e5779a12eddd418.html http://hi.baidu.com/laowuuser/blog/item/317647c7992a65de38db4946.html 参考文档： 1. 复制代码 SSH: Port Forwarding 1.正向隧道-隧道监听本地port,为普通活动提供安全连接 ssh -qTfnN -L port:host:hostport -l user remote_ip 2.反向隧道—-隧道监听远程port，突破防火墙提供服务 ssh -qTfnN -R port:host:hostport -l user remote_ip 3.socks代理 SSH -qTfnN -D port remotehost（用证书验证就直接主机名，没用的还要加上用户名密码） -q Quiet mode. 安静模式，忽略一切对话和错误提示。 -T Disable pseudo-tty allocation. 不占用 shell 了。 -f Requests ssh to go to background just before command execution. 后台运行，并推荐加上 -n 参数。 -n Redirects stdin from /dev/null (actually, prevents reading from stdin). -f 推荐的，不加这条参数应该也行。 -N Do not execute a remote command. 不执行远程命令，专为端口转发度身打造。 复制代码 2. 复制代码 ssh实现转发, 只要用到以下两条命令: # ssh -CfNg -L 6300:127.0.0.1:1521 [email protected] # ssh -CfNg -R 1521:127.0.0.1:6300 [email protected] 不论是做跳板, 还是加密隧道, 还是加密其他的网络连接也都是这两条命令. 视具体情况而定, 有时只要用到其中一条, 有时两条都要用到. 命令解释: 1) -CfNg C表示压缩数据传输 f表示后台用户验证,这个选项很有用,没有shell的不可登陆账号也能使用. N表示不执行脚本或命令 g表示允许远程主机连接转发端口 2) -L 本地转发 # ssh -CfNg -L 6300:127.0.0.1:1521 [email protected] 本机(运行这条命令的主机)打开6300端口, 通过加密隧道映射到远程主机172.16.1.164的1521端口(使用远程主机oracle用户). 在本机上用netstat -an|grep 6300可看到. 简单说,本机的6300端口就是远程主机172.16.1.164的1521端口. 3) -R 远程转发 # ssh -CfNg -R 1521:127.0.0.1:6300 [email protected] 作用同上, 只是在远程主机172.16.1.164上打开1521端口, 来映射本机的6300端口. 4) 实用例子 有A,B,C 3台服务器, A,C有公网IP, B是某IDC的服务器无公网IP. A通过B连接C的80端口(A<=>B<=>C), 那么在B上执行如下命令即可: $ ssh -CfNg -L 6300:127.0.0.1:80 [email protected] $ ssh -CfNg -R 80:127.0.0.1:6300 [email protected] 服务器A和服务器C之间, 利用跳板服务器B建立了加密隧道. 在A上连接127.0.0.1:80, 就等同C上的80端口. 需要注意的是, 服务器B上的6300端口的数据没有加密, 可被监听, 例: # tcpdump -s 0-i lo port 6300 复制代码 3. 复制代码 http://bianbian.org/technology/264.html 里有一些好用的网址，介绍ssh及其代理穿透防火墙的 http://www.inet.no/dante/ Dante — Proxy communication solution ssh 是有端口转发功能的。（转） http://doc.linuxpk.com/80817.html ssh的三个强大的端口转发命令： QUOTE: ssh -C -f -N -g -L listen_port:DST_Host:DST_port [email protected] _Host ssh -C -f -N -g -R listen_port:DST_Host:DST_port [email protected] _Host ssh -C -f -N -g -D listen_port [email protected] _Host -f Fork into background after authentication. 后台认证用户/密码，通常和-N连用，不用登录到远程主机。 -p port Connect to this port. Server must be on the same port. 被登录的ssd服务器的sshd服务端口。 -L port:host:hostport 将本地机(客户机)的某个端口转发到远端指定机器的指定端口. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 同时远程主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有 root 才能转发特权端口. IPv6 地址用另一种格式说明: port/host/hostport -R port:host:hostport 将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口. 工作原理是这样的, 远程主机上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转向出去, 同时本地主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有用 root 登录远程主机才能转发特权端口. IPv6 地址用另一种格式说明: port/host/hostport -D port 指定一个本地机器 “动态的’’ 应用程序端口转发. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 根据应用程序的协议可以判断出远程主机将和哪里连接. 目前支持 SOCKS4 协议, 将充当 SOCKS4 服务器. 只有 root 才能转发特权端口. 可以在配置文件中指定动态端口的转发. -C Enable compression. 压缩数据传输。 -N Do not execute a shell or command. 不执行脚本或命令，通常与-f连用。 -g Allow remote hosts to connect to forwarded ports. 在-L/-R/-D参数中，允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接 Linux命令行下SSH端口转发设定笔记(转) 原文:http://be-evil.org/post-167.html 在Windows下面我们可以很方便的使用putty等ssh工具来实现将服务器上的端口映射到本机端口来安全管理服务器上的软件或者服务 那么我们换到在Liunx下我们应该怎么做呢？ ssh -L 本地端口:服务器地址:服务器端口 [email protected] -N 参数详解: -L 端口映射参数 本地端口 – 这个任意即可，只要本机没有其他的程序占用这个端口就行 服务器地址 – 你需要映射的服务器地址（名称/ip） 服务器端口 – 远程的服务器端口 -N – 不使用Shell窗口，纯做转发的时候用，如果你在映射完成后继续在服务器上输入命令，去掉这个参数即可 例子A:我们想远程管理服务器上的MySQL,那么使用下面命令 ssh -L 3306:127.0.0.1:3306 [email protected] -N 运行这个命令之后，ssh将会自动将服务器的3306映射到本机的3306端口，我们就可以使用任意MySQL客户端连接 localhost:3306即可访问到服务器上的MySQL了。 例子B:一次同时映射多个端口 ssh -L 8888:www.host.com:80-L 110:mail.host.com:110 \ 25:mail.host.com:25 [email protected] -N 这个命令将自动把服务器的80，110，25端口映射到本机的8888，110和25端口 以上命令在ubuntu 9.10 上测试通过… 关于ssh端口转发的深入实例[转] http://blog.myhnet.cn/2009/01/08/deepin-instances-of-ssh-port-forwarding/ 首先，认识下这三个非常强大的命令： ssh -C -f -N -g -L listen_port:DST_Host:DST_port [email protected] _Host ssh -C -f -N -g -R listen_port:DST_Host:DST_port [email protected] _Host ssh -C -f -N -g -D listen_port [email protected] _Host 相关参数的解释： -f Fork into background after authentication. 后台认证用户/密码，通常和-N连用，不用登录到远程主机。 -L port:host:hostport 将本地机(客户机)的某个端口转发到远端指定机器的指定端口. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 同时远程主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有 root 才能转发特权端口. IPv6 地址用另一种格式说明: port/host/hostport -R port:host:hostport 将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口. 工作原理是这样的, 远程主机上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转向出去, 同时本地主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有用 root 登录远程主机才能转发特权端口. IPv6 地址用另一种格式说明: port/host/hostport -D port 指定一个本地机器 “动态的’’ 应用程序端口转发. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 根据应用程序的协议可以判断出远程主机将和哪里连接. 目前支持 SOCKS4 协议, 将充当 SOCKS4 服务器. 只有 root 才能转发特权端口. 可以在配置文件中指定动态端口的转发. -C Enable compression. 压缩数据传输。 -N Do not execute a shell or command. 不执行脚本或命令，通常与-f连用。 -g Allow remote hosts to connect to forwarded ports. 在-L/-R/-D参数中，允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接。注：这个参数我在实践中似乎始终不起作用 实例说明： 一台服务器提供ftp服务，因为ftp传输是明文密码，如果不做ssh端口之前，我们可以通过tcpdump命令很容易的捕捉到明文信息。所以我们要对21端口进行转发： ftp-server# ssh -CNfg -R 2121:localhost:21 [email protected] 然后登录到100.0.0.50机器，我们可以通过netstat -an|grep :2121查看端口已经侦听 100.0.0.50# ftp localhost 2121 就可以登录到ftp-server了，而且tcpdump无法捕获到有效的信息。 2121端口任意选择，只要是机器上没有占用的端口就行 来一个稍微复杂一点的，做网关的例子： 假如内网有一台提供ftp(linux，port is2121，称为A机器)的机器，通过网关服务器(linux，port is8888，称为B机器)进去，现在外网有一台C机器需要访问网关服务器的某个端口(port is21)来访问内网的ftp服务器。大家可以看到，其实这就像是一个基于ssh的防火墙程序，好，下面我们来具体操作： 1、login A 机器 # ssh -CNfg -R 8888:localhost:2121 [email protected] 这样我们就在B机器上开了一个8888->2121的端口转换，但是由于8888端口只能侦听在localhost主机上，因此，虽然我们已经可以在B机器上使用 # ftp localhost 8888 来访问真正的ftp服务器，但仍然无法提供给外网的机器访问 2、login B机器 # ssh -CNfg -L 21:localhost:8888 [email protected] 这样做，是做本地机器上的21->8888端口转换，可以侦听在任何地址上的请求。 2(1)。 如果C机器也是一台linux机器，那也可以这样设置： # ssh -CNfg -R 21:localhost:8888 [email protected] 3。使用C机器， 可以是linux下的ftp命令，也可以是windows下的客户端软件都可以访问B机器的21端口来连接后台真正的ftp服务器(真正的端口是2121) 如果是按照2(1)中的设置，则访问的地址为本机IP。 复制代码 用”scp”拷贝文件 SSH提供了一些命令和shell用来登录远程服务器。在默认情况下它不允许你拷贝文件,但是还是提供 了一个”scp”命令。 假定你想把本地计算机当前目录下的一个名为”dumb”的文件拷贝到远程服务器www.foobar.com上你的 家目录下。而且你在远程服务器上的帐号名为”bilbo”。可以用这个命令: scp dumb [email protected] :. 把文件拷贝回来用这个命令: scp [email protected] :dumb . 完 发布于 2016年12月16日分类 linux、建站、网络、翻墙标签 ssh、代理、翻墙 海淘转运 知乎上的回答 https://www.zhihu.com/question/20207442 https://www.zhihu.com/question/20526222 发布于 2016年12月15日分类 未分类标签 海淘、转运 非常详细又非常基本的ASS代码 学好SSA主要从两个方面着手:一个是SSA文件的组成结构;一个是SSA代码。 一.SSA文件的组成结构 SSA文件主要由三大部分组成:[Script Info]部分,[v4 Styles]部分和[Events]部分。 1.[Script Info]部分 PlayResX: 384 PlayResY: 288 384×288是标准的4：3画面分辨率之一。ssa字幕里的坐标（字幕的位置）即根据这2个数值的范围来定义。16：9宽银幕的片子略做调整即可。 这里主要介绍文件本身和制作者的信息,这里面最重要的两项是PlayResX和PlayResY,它实际上是按给定的PlayResX和PlayResY数值将屏幕按比例化分,屏幕的左上角坐标为(0,0),右下角坐标为(PlayResX数值,PlayResY数值).这两个值最好是和视频文件的长宽相同,这样在下面 [Events]部分文本位置坐标的设定很方便而且准确. 当然这两个值也可能和原视频文件的长宽不同,比如视频文件尺寸为640×360,而PlayResX:384,PlayResY: 288,如同前面所说的,它是将屏幕长宽按384:288来化分的.一旦这样划定,下面的各种坐标设定都要以384和288为根据. 特别要注意的是:对于一个已经存在并且文本坐标都设置好的SSA文件,如果它的PlayResX和PlayResY数值和视频文件的长宽尺寸不符(包括成比例的情况,比如视频文件尺寸为640×360,而 PlayResX:320,PlayResY: 180),我们不要简单的把PlayResX和PlayResY数值改成屏幕尺寸,这样将导致字幕失真,是因为文本部分的尺寸并没有改,仍按照原来的PlayResX和PlayResY数值设定.如果有较多的坐标设定,就不要改原来的PlayResX和PlayResY数值,在原基础上编辑. 2.[V4 Styles]部分 这是个存放[Events]部分里所用到的各种字体信息的地方.可以存在多种字体,每种字体有多种特征.当[Events]部分的Name项引用到这里的某种字体时,则意味这该字体的各种特征也被引用.字体的特征还可以在文本行中修改,这将在[Events]部分讨论. 常见的字体属性有Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding 我们可以再定义一个Style，并命名为mine，如Style: mine,华文新魏,18,&HFF0000,&HFF80FF0,&Hffffff,&Hffffff,0,0,1,2,1,2,20,20,20,0,134 即可以这样： [V4 Styles] Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle,Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding Style: Default,华文彩云,18,&Hff0000,&Hff8080,&Hffffff,&Hffffff,0,0,1,2,1,2,20,20,20,0,134 Style: mine,华文新魏,18,&HFF0000,&HFF80FF0,&Hffffff,&Hffffff,0,0,1,2,1,2,20,20,20,0,134 有了具体经验后，一般可以不作调整，需要改动的可以是“Fontname”，如改成黑体， “Fontsize”，做字幕字号24比较合适。至于最后的“Encoding”，134表示简体中文的编码，繁体中文的编码为136。 下面对各项作一说明,并列出属性的取值及范围 Name —字体名称—[Events]部分将引用该项,比如Default,Font1等 Fontname —所使用的字型—比如黑体,楷体_GB2312等.对新载入的SSA文件,VOBSUB不会识别出宋体以外的字型,都按宋体输出.但可以在DirectVobSub中重新定义 Fontsize —字体大小—常用范围8-72 PrimaryColour —主体颜色—颜色格式为&HXXXXXX，十六进制，X取值为0-f SecondaryColour —次要颜色—格式同上,卡拉OK中使用,即变色前的颜,变色后显示主体颜色 TertiaryColour —边框颜色—格式同上 BackColour —阴影颜色—格式同上 下面是一些常用颜色的代码,以便在文件中直接添加和编辑: &Hffffff 白 &H8080ff 浅红 &H000000 黑 &H80ffff 浅黄 &H0000ff 深红 &HFF8000 亮蓝 &H00ffff 深黄 &H80ff00 浅绿 &Hff0000 深蓝 &H00ff00 亮绿 &H008000 深绿 &Hff00ff 紫红(偏紫) &H0080ff 橙 &H8000ff 紫红(偏红) &Hff0080 紫 &Hffff00 浅蓝 Bold —粗体—0关闭，-1开启 Italic —斜体—0关闭，-1开启 BorderStyle —边框样式—取值1:正常,取值3:有一覆盖区域 Outline —边框宽度—取值范围1-4,数字越大边框越宽 Shadow —阴影距离—取值范围0-4,数字越大阴影越厚 Alignment —对齐方式—这是重中之重,学懂对齐方式等于学懂了一半的SSA,其用法将在下面的代码部分作详细的介绍,这里只作简单的说明(下面各位置的数字就是Alignment的取值,很好记:从1-11,没有4和8这两个数,其余都是连续排列): 左 中 右 上 5 6 7 中 9 10 11 下 1 2 3 MarginL —字幕距左边的距离—取值范围0-PlayResX的数值 MarginR —字幕距右边的距离—取值范围0-PlayResX的数值 MarginV —字幕高度—取值范围0-PlayResY的数值 AlphaLevel—字体透明度—透明度格式为&HXX,十六进制,X取值为0-f Encoding —编码—简体134,繁体138 3.[Events] Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text 从这里开始就是字幕部分了，以“Dialogue: Marked=0,0:00:01.34,0:00:02.05,Default,,0000,0000,0000,,”定义开头。如果只是单纯做字幕用，那么这句后面就是字幕部分了，而字幕的格式根据[V4 Styles]里设置的来显示。Default可以换用上面设置的mine，那么显示的格式是按照mine里面设定！ 这里是将[v4 Styles]部分中已定义的字体提供给字幕,并能对字体的各属性重新定义;通过特定的SSA代码实现特效. Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text Marked—标记—一般都设为0 Start —字幕开始时间—格式0:00:00.00最小单位0.01秒 End —字幕结束时间—格式同上 Style —字体名称—引用的是[v4 Styles]部分中的Name项 Name —名字—注意这个Name和[v4 Styles]部分中的Name完全不同,相当于注释,一般省略,省略后只留一逗号. MarginL—是对[v4 Styles]部分MarginL值的重新设定,0000表示采用原值;若不为零,则代替原值(此时原值不再起作用) MarginR—是对[v4 Styles]部分MarginR值的重新设定,用法同上 MarginV—是对[v4 Styles]部分MarginV值的重新设定,用法同上 Effect—这里是SSA为编辑人员方便使用动态效果而自定义的代码,有Scroll up,Scroll down,Banner和Karaoke四种形式.为集中学习这里就不作介绍将其放到SSA代码部分说明. Text—字幕区—在这里可以添加代码改变字体属性,实现多种特效 其实[v4 Styles]部分就是一个存放各种字体以及该字体属性初始值的一个场所,它的大小,颜色,字幕所在的位置等信息都放在这里;而[Events]部分则是把[v4 Styles]部分中的各个字体应用到文本中去,并且能够对已定义的字体的各种属性进行修改以达到需要的效果.打个比方,几种不同类型的木材,具有各自的原始尺寸颜色,经过加工改变大小涂上新的颜色(或者直接使用原料),从而做成各种家俱材料.[v4 Styles]部分就相当于放置这些原始木材的仓库,而[Events]部分则是执行怎样加工木材并将其安装到家俱上. 二.下面介绍SSA代码的用法 SSA代码 首先对下面代码中用到的符号说明一下: <..>—参数 [..]—可选项 <../..>—任选其中一项 规定:所有代码之前加\ 所有代码放在括号{}内，\N,\n,\h例外。 \N—换行—换行后两行之间没有空隙 \n—空格—或直接按空格键,超出范围自动换行 \h—空格—或直接按空格键 \b<0/1>—粗体—0关闭，1开启 \i<0/1>—斜体—0关闭，1开启 \bord—边框宽度—width取值范围1-4,数字越大边框越宽 \shad—阴影距离—depth取值范围0-4,数字越大阴影越厚 \r
